# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Music {
  id: Int!
  musicUrl: String!
  isFavourite: String!
  musicTitle: String!
  thumbnailUrl: String!
  musicArtist: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type playMusic {
  id: Int!
  musicUrl: String!
  musicTitle: String!
  thumbnailUrl: String!
  musicArtist: String!
  createdAt: DateTime!
}

type Playlist {
  playlistName: String!
  createdAt: DateTime!
  playlists: [playMusic!]!
}

type SignupResponse {
  status: Int!
  message: String!
}

type LastHistory {
  userId: String!
  id: Float!
  musicUrl: String!
  thumbnailUrl: String!
  musicTitle: String!
  musicArtist: String!
  lastPlayedAt: DateTime!
  isFavourite: Boolean!
}

type Favourite {
  id: Float!
  musicTitle: String!
  musicArtist: String!
  thumbnailUrl: String!
}

type PreviousSearch {
  searchQuery: String!
  searchHistoryAt: DateTime!
}

type Suggestion {
  id: Float!
  musicTitle: String!
  musicArtist: String!
  thumbnailUrl: String!
}

type SearchResponse {
  favourite: [Favourite!]!
  previousSearch: [PreviousSearch!]!
  suggestion: [Suggestion!]!
}

type SearchHistory {
  userId: String!
  searchQuery: String!
  searchHistoryAt: DateTime!
}

type saveMusic {
  code: String!
  status: Float!
  message: String!
}

type MusicDetails {
  id: Float!
  musicUrl: String!
  musicTitle: String!
  thumbnailUrl: String!
  musicArtist: String!
  createdAt: DateTime!
  isFavourite: Boolean!
}

type Query {
  index: String!
  musics: [Music!]!
  getMusicByUserId: [Music!]!
  getFavoriteMusicByUserId: [Music!]!
  getPlaylistNameByUserId: [String!]!
  getPlaylistByUserId: [Playlist!]!
  getSharedPlaylistDetails(userId: String!, playlistName: String!): [Music!]!
  getLastHistory: LastHistory
  search(searchString: String): SearchResponse!
  searchMusic(searchQuery: String!): [MusicDetails!]!
}

type Mutation {
  create(createSignupInput: CreateSignupInput!): SignupResponse!
  saveSearchQuery(searchQuery: String!): SearchHistory!
  saveMusic(musicId: Float!): saveMusic!
}

input CreateSignupInput {
  userId: String!
  name: String!
  email: String!
}